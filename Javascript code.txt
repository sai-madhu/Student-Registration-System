// Get form and table elements
const studentForm = document.getElementById("studentForm");
const recordTable = document.getElementById("recordTable");

// Load existing records from localStorage
let studentRecords = JSON.parse(localStorage.getItem("studentRecords")) || [];

// Function to save records to localStorage
function saveRecords() {
    localStorage.setItem("studentRecords", JSON.stringify(studentRecords));
}

// Function to render records in the table
function renderRecords() {
    recordTable.innerHTML = "";
    studentRecords.forEach((record, index) => {
        const row = document.createElement("tr");

        row.innerHTML = `
            <td>${record.name}</td>
            <td>${record.id}</td>
            <td>${record.email}</td>
            <td>${record.contact}</td>
            <td>
                <button class="action edit" onclick="editRecord(${index})">Edit</button>
                <button class="action delete" onclick="deleteRecord(${index})">Delete</button>
            </td>
        `;

        recordTable.appendChild(row);
    });
}

// Function to add a new record
studentForm.addEventListener("submit", (event) => {
    event.preventDefault();

    const name = document.getElementById("studentName").value.trim();
    const id = document.getElementById("studentID").value.trim();
    const email = document.getElementById("email").value.trim();
    const contact = document.getElementById("contact").value.trim();

    // Validation
    if (!name || !/^[A-Za-z ]+$/.test(name)) {
        alert("Invalid name. Only characters are allowed.");
        return;
    }

    if (!id || isNaN(id)) {
        alert("Invalid student ID. Only numbers are allowed.");
        return;
    }

    if (!email || !/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email)) {
        alert("Invalid email address.");
        return;
    }

    if (!contact || !/^\d{10}$/.test(contact)) {
        alert("Invalid contact number. Enter a 10-digit number.");
        return;
    }

    // Add record to array
    studentRecords.push({ name, id, email, contact });

    // Save and render
    saveRecords();
    renderRecords();

    // Reset form
    studentForm.reset();
});

// Function to edit a record
function editRecord(index) {
    const record = studentRecords[index];

    document.getElementById("studentName").value = record.name;
    document.getElementById("studentID").value = record.id;
    document.getElementById("email").value = record.email;
    document.getElementById("contact").value = record.contact;

    // Remove the record being edited
    deleteRecord(index);
}

// Function to delete a record
function deleteRecord(index) {
    studentRecords.splice(index, 1);
    saveRecords();
    renderRecords();
}

// Initial render
renderRecords();